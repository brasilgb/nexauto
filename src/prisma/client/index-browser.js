
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  is_admin: 'is_admin',
  roles: 'roles',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId',
  companyId: 'companyId'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cnpj: 'cnpj',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  corpreason: 'corpreason',
  cnpj: 'cnpj',
  subnumber: 'subnumber',
  subname: 'subname',
  cep: 'cep',
  state: 'state',
  city: 'city',
  district: 'district',
  street: 'street',
  number: 'number',
  complement: 'complement',
  telefone: 'telefone',
  status: 'status',
  whatsapp: 'whatsapp',
  observation: 'observation',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.SettingScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  organizationId: 'organizationId'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  resumo_cnpj: 'resumo_cnpj',
  resumo_codfil: 'resumo_codfil',
  resumo_desfil: 'resumo_desfil',
  resumo_datmvt: 'resumo_datmvt',
  resumo_yearmonth: 'resumo_yearmonth',
  resumo_valdev: 'resumo_valdev',
  resumo_valven: 'resumo_valven',
  resumo_margem: 'resumo_margem',
  resumo_presen: 'resumo_presen',
  resumo_metdia: 'resumo_metdia',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.AssociationScalarFieldEnum = {
  id: 'id',
  assoc_cnpj: 'assoc_cnpj',
  assoc_filial: 'assoc_filial',
  assoc_datmvt: 'assoc_datmvt',
  assoc_ass: 'assoc_ass',
  assoc_desass: 'assoc_desass',
  assoc_valdev: 'assoc_valdev',
  assoc_valven: 'assoc_valven',
  assoc_margem: 'assoc_margem',
  assoc_repres: 'assoc_repres',
  assoc_metdia: 'assoc_metdia',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.TotalScalarFieldEnum = {
  id: 'id',
  total_cnpj: 'total_cnpj',
  total_datatu: 'total_datatu',
  total_filial: 'total_filial',
  total_valdev: 'total_valdev',
  total_valven: 'total_valven',
  total_margem: 'total_margem',
  total_permet: 'total_permet',
  total_projec: 'total_projec',
  total_valjur: 'total_valjur',
  total_perjur: 'total_perjur',
  total_valina: 'total_valina',
  total_perina: 'total_perina',
  total_valest: 'total_valest',
  total_meta: 'total_meta',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  action: 'action',
  message: 'message',
  organization: 'organization',
  company: 'company',
  details: 'details',
  organizationId: 'organizationId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  roles: 'roles',
  organizationId: 'organizationId',
  companyId: 'companyId'
};

exports.Prisma.OrganizationOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  cnpj: 'cnpj'
};

exports.Prisma.CompanyOrderByRelevanceFieldEnum = {
  id: 'id',
  corpreason: 'corpreason',
  cnpj: 'cnpj',
  subnumber: 'subnumber',
  subname: 'subname',
  cep: 'cep',
  state: 'state',
  city: 'city',
  district: 'district',
  street: 'street',
  number: 'number',
  complement: 'complement',
  telefone: 'telefone',
  whatsapp: 'whatsapp',
  observation: 'observation',
  organizationId: 'organizationId'
};

exports.Prisma.SettingOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  logo: 'logo',
  organizationId: 'organizationId'
};

exports.Prisma.SaleOrderByRelevanceFieldEnum = {
  id: 'id',
  resumo_cnpj: 'resumo_cnpj',
  resumo_codfil: 'resumo_codfil',
  resumo_desfil: 'resumo_desfil',
  resumo_datmvt: 'resumo_datmvt',
  resumo_yearmonth: 'resumo_yearmonth',
  resumo_valdev: 'resumo_valdev',
  resumo_valven: 'resumo_valven',
  resumo_margem: 'resumo_margem',
  resumo_presen: 'resumo_presen',
  resumo_metdia: 'resumo_metdia',
  organizationId: 'organizationId'
};

exports.Prisma.AssociationOrderByRelevanceFieldEnum = {
  id: 'id',
  assoc_cnpj: 'assoc_cnpj',
  assoc_filial: 'assoc_filial',
  assoc_datmvt: 'assoc_datmvt',
  assoc_ass: 'assoc_ass',
  assoc_desass: 'assoc_desass',
  assoc_valdev: 'assoc_valdev',
  assoc_valven: 'assoc_valven',
  assoc_margem: 'assoc_margem',
  assoc_repres: 'assoc_repres',
  assoc_metdia: 'assoc_metdia',
  organizationId: 'organizationId'
};

exports.Prisma.TotalOrderByRelevanceFieldEnum = {
  id: 'id',
  total_cnpj: 'total_cnpj',
  total_datatu: 'total_datatu',
  total_filial: 'total_filial',
  total_valdev: 'total_valdev',
  total_valven: 'total_valven',
  total_margem: 'total_margem',
  total_permet: 'total_permet',
  total_projec: 'total_projec',
  total_valjur: 'total_valjur',
  total_perjur: 'total_perjur',
  total_valina: 'total_valina',
  total_perina: 'total_perina',
  total_valest: 'total_valest',
  total_meta: 'total_meta',
  organizationId: 'organizationId'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ActivityLogOrderByRelevanceFieldEnum = {
  id: 'id',
  action: 'action',
  message: 'message',
  organization: 'organization',
  company: 'company',
  organizationId: 'organizationId'
};


exports.Prisma.ModelName = {
  User: 'User',
  Organization: 'Organization',
  Company: 'Company',
  Setting: 'Setting',
  Sale: 'Sale',
  Association: 'Association',
  Total: 'Total',
  ActivityLog: 'ActivityLog'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
